BL e BX: con questi salti vai alla funzione e poi torni al punto in cui avevi fatto il salto. Vediamo un esempio:

_start:
  mov r0, #1
  bl add2
  mov r1, #6

add2:
  add r0, r0, #2
  bx lr



è più conveniente usare subs al posto di fare dei cmp perché risparmi registri
e anche il numero di istruzioni.
Ad esempio:

subs r1, r1, #1             cmp r2, r1
bgt loop                    ble exit
ble exit                    subgt r2, r2, #1


Salvare gli elementi di un vettore in più registri. esempio
array:
  .word 1, 6, 9

  ldr r0, =array
  ldmia r0!, {r1-r3}      salvo in r1, r2, r3 i valori in ordine dell'array

Viceversa, posso anche caricare più elementi in un registro

Keyword:
-   GT  > 0
-   GE  >= 0
-   LE  <= 0
-   LT  < 0
-   EQ  = 0
-   NE  != 0

Software Interrupt:
-   swi 0x00 --> print_char         in r0 va il carattere
-   swi 0x02 --> print_string       in r0 va l'indirizzo della stringa
-   swi 0x11 --> exit
-   swi 0x12 --> allocate           in r0 va la dimensione
-   swi 0x66 --> open               in r0 il nome del file, in r1 va la modalità di apertura
-   swi 0x68 --> close              in r0 il nome del file
-   swi 0x69 --> write str          in r0 il nome del file, in r1 va la stringa
-   swi 0x6a --> read str           in r0 il nome del file, in r1 la stringa, in r2 va la dimensione
-   swi 0x6b --> write int          in r0 il nome del file, in r1 va l'intero
-   swi 0x6c --> read int           in r0 il nome del file, mette in r0 l'intero

Le liste sono strutture dinamiche perché la loro dimensione e struttura può cambiare durante l'esecuzione.
Le liste possono anche essere create e distrutte nel corso del programma, mentre l'array ha
dimensione fissa e predefinita.

I dati delle liste sono contenuti all'interno di nodi collegati tra loro tramite puntatori.
Il nodo contiene:
- il dato
- un puntatore che punta al nodo successivo

L'ultimo nodo contiene un puntatore nullo.